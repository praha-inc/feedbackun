"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""フィードバック"""
type Feedback {
  """フィードバック内容"""
  content: String!

  """フィードバック日時"""
  createdAt: DateTime!

  """フィードバックID"""
  id: ID!

  """フィードバックを受けたユーザー"""
  recipient: User!

  """フィードバックを送ったユーザー"""
  sender: User!

  """フィードバックを受けたSlackメッセージ"""
  slackMessage: SlackMessage!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  """フィードバックを取得する"""
  feedbacks(after: String, before: String, first: Int, last: Int): QueryFeedbacksConnection!

  """ログインユーザーを取得する"""
  me: User!
}

type QueryFeedbacksConnection {
  edges: [QueryFeedbacksConnectionEdge!]!
  pageInfo: PageInfo!
}

type QueryFeedbacksConnectionEdge {
  cursor: String!
  node: Feedback!
}

"""Slackチャンネル"""
type SlackChannel {
  """SlackチャンネルID"""
  id: ID!

  """Slackチャンネル名"""
  name: String!

  """Slackチャンネルが所属するSlackチーム"""
  slackTeam: SlackTeam!
}

"""Slackメッセージ"""
type SlackMessage {
  """Slackメッセージ内容"""
  content: String!

  """SlackメッセージID"""
  id: ID!

  """Slackメッセージが投稿されたSlackチャンネル"""
  slackChannel: SlackChannel!
}

"""Slackチーム"""
type SlackTeam {
  """SlackチームID"""
  id: ID!

  """Slackチーム名"""
  name: String!
}

"""ユーザー"""
type User {
  """ユーザーアイコン"""
  icon: String!

  """ユーザーID"""
  id: ID!

  """ユーザー名"""
  name: String!

  """ユーザー種別"""
  type: UserType!
}

"""ユーザー種別"""
enum UserType {
  designer
  engineer
}